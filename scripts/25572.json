{
  "type": "Program",
  "body": [
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportNamespaceSpecifier",
          "local": {
            "type": "Identifier",
            "name": "React"
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "react",
        "raw": "\"react\""
      }
    },
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "createContext"
          },
          "imported": {
            "type": "Identifier",
            "name": "createContext"
          }
        },
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "useContext"
          },
          "imported": {
            "type": "Identifier",
            "name": "useContext"
          }
        },
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "memo"
          },
          "imported": {
            "type": "Identifier",
            "name": "memo"
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "react",
        "raw": "\"react\""
      }
    },
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportDefaultSpecifier",
          "local": {
            "type": "Identifier",
            "name": "get"
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "lodash/get",
        "raw": "\"lodash/get\""
      }
    },
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportDefaultSpecifier",
          "local": {
            "type": "Identifier",
            "name": "Typography"
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "@mui/material/Typography",
        "raw": "\"@mui/material/Typography\""
      }
    },
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "useRecordContext"
          },
          "imported": {
            "type": "Identifier",
            "name": "useRecordContext"
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "ra-core",
        "raw": "\"ra-core\""
      }
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "VariableDeclaration",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "RecordContext"
            },
            "init": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "createContext"
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "undefined"
                }
              ]
            }
          }
        ],
        "kind": "const"
      },
      "specifiers": [],
      "source": null
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "VariableDeclaration",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "RecordContextProvider"
            },
            "init": {
              "type": "ArrowFunctionExpression",
              "id": null,
              "params": [
                {
                  "type": "ObjectPattern",
                  "properties": [
                    {
                      "type": "Property",
                      "key": {
                        "type": "Identifier",
                        "name": "children"
                      },
                      "computed": false,
                      "value": {
                        "type": "Identifier",
                        "name": "children"
                      },
                      "kind": "init",
                      "method": false,
                      "shorthand": true
                    },
                    {
                      "type": "Property",
                      "key": {
                        "type": "Identifier",
                        "name": "value"
                      },
                      "computed": false,
                      "value": {
                        "type": "Identifier",
                        "name": "value"
                      },
                      "kind": "init",
                      "method": false,
                      "shorthand": true
                    }
                  ]
                }
              ],
              "body": {
                "type": "JSXElement",
                "openingElement": {
                  "type": "JSXOpeningElement",
                  "name": {
                    "type": "JSXMemberExpression",
                    "object": {
                      "type": "JSXIdentifier",
                      "name": "RecordContext"
                    },
                    "property": {
                      "type": "JSXIdentifier",
                      "name": "Provider"
                    }
                  },
                  "selfClosing": false,
                  "attributes": [
                    {
                      "type": "JSXAttribute",
                      "name": {
                        "type": "JSXIdentifier",
                        "name": "value"
                      },
                      "value": {
                        "type": "JSXExpressionContainer",
                        "expression": {
                          "type": "Identifier",
                          "name": "value"
                        }
                      }
                    }
                  ]
                },
                "children": [
                  {
                    "type": "JSXExpressionContainer",
                    "expression": {
                      "type": "Identifier",
                      "name": "children"
                    }
                  }
                ],
                "closingElement": {
                  "type": "JSXClosingElement",
                  "name": {
                    "type": "JSXMemberExpression",
                    "object": {
                      "type": "JSXIdentifier",
                      "name": "RecordContext"
                    },
                    "property": {
                      "type": "JSXIdentifier",
                      "name": "Provider"
                    }
                  }
                }
              },
              "generator": false,
              "expression": true,
              "async": false
            }
          }
        ],
        "kind": "const"
      },
      "specifiers": [],
      "source": null
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "VariableDeclaration",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "useRecordContext"
            },
            "init": {
              "type": "ArrowFunctionExpression",
              "id": null,
              "params": [
                {
                  "type": "Identifier",
                  "name": "props"
                }
              ],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "VariableDeclaration",
                    "declarations": [
                      {
                        "type": "VariableDeclarator",
                        "id": {
                          "type": "Identifier",
                          "name": "context"
                        },
                        "init": {
                          "type": "BinaryExpression",
                          "operator": ">",
                          "left": {
                            "type": "BinaryExpression",
                            "operator": "<",
                            "left": {
                              "type": "Identifier",
                              "name": "useContext"
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "RecordType"
                            }
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "RecordContext"
                          }
                        }
                      }
                    ],
                    "kind": "const"
                  },
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "LogicalExpression",
                      "operator": "||",
                      "left": {
                        "type": "LogicalExpression",
                        "operator": "&&",
                        "left": {
                          "type": "Identifier",
                          "name": "props"
                        },
                        "right": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "props"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "record"
                          }
                        }
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "context"
                      }
                    }
                  }
                ]
              },
              "generator": false,
              "expression": false,
              "async": false
            }
          }
        ],
        "kind": "const"
      },
      "specifiers": [],
      "source": null
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "VariableDeclaration",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "removeTags"
            },
            "init": {
              "type": "ArrowFunctionExpression",
              "id": null,
              "params": [
                {
                  "type": "Identifier",
                  "name": "input"
                }
              ],
              "body": {
                "type": "ConditionalExpression",
                "test": {
                  "type": "Identifier",
                  "name": "input"
                },
                "consequent": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "input"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "replace"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": {},
                      "raw": "/<[^>]+>/gm",
                      "regex": {
                        "pattern": "<[^>]+>",
                        "flags": "gm"
                      }
                    },
                    {
                      "type": "Literal",
                      "value": "",
                      "raw": "\"\""
                    }
                  ]
                },
                "alternate": {
                  "type": "Literal",
                  "value": "",
                  "raw": "\"\""
                }
              },
              "generator": false,
              "expression": true,
              "async": false
            }
          }
        ],
        "kind": "const"
      },
      "specifiers": [],
      "source": null
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "VariableDeclaration",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "RichTextField"
            },
            "init": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "memo"
              },
              "arguments": [
                {
                  "type": "ArrowFunctionExpression",
                  "id": null,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "props"
                    }
                  ],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "ObjectPattern",
                              "properties": [
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "className"
                                  },
                                  "computed": false,
                                  "value": {
                                    "type": "Identifier",
                                    "name": "className"
                                  },
                                  "kind": "init",
                                  "method": false,
                                  "shorthand": true
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "emptyText"
                                  },
                                  "computed": false,
                                  "value": {
                                    "type": "Identifier",
                                    "name": "emptyText"
                                  },
                                  "kind": "init",
                                  "method": false,
                                  "shorthand": true
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "source"
                                  },
                                  "computed": false,
                                  "value": {
                                    "type": "Identifier",
                                    "name": "source"
                                  },
                                  "kind": "init",
                                  "method": false,
                                  "shorthand": true
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "stripTags"
                                  },
                                  "computed": false,
                                  "value": {
                                    "type": "AssignmentPattern",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "stripTags"
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": false,
                                      "raw": "false"
                                    }
                                  },
                                  "kind": "init",
                                  "method": false,
                                  "shorthand": true
                                }
                              ]
                            },
                            "init": {
                              "type": "Identifier",
                              "name": "props"
                            }
                          }
                        ],
                        "kind": "const"
                      },
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "record"
                            },
                            "init": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "useRecordContext"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "props"
                                }
                              ]
                            }
                          }
                        ],
                        "kind": "const"
                      },
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "value"
                            },
                            "init": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "get"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "record"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "source"
                                }
                              ]
                            }
                          }
                        ],
                        "kind": "const"
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "JSXElement",
                          "openingElement": {
                            "type": "JSXOpeningElement",
                            "name": {
                              "type": "JSXIdentifier",
                              "name": "Typography"
                            },
                            "selfClosing": false,
                            "attributes": [
                              {
                                "type": "JSXAttribute",
                                "name": {
                                  "type": "JSXIdentifier",
                                  "name": "className"
                                },
                                "value": {
                                  "type": "JSXExpressionContainer",
                                  "expression": {
                                    "type": "Identifier",
                                    "name": "className"
                                  }
                                }
                              },
                              {
                                "type": "JSXAttribute",
                                "name": {
                                  "type": "JSXIdentifier",
                                  "name": "variant"
                                },
                                "value": {
                                  "type": "Literal",
                                  "value": "body2",
                                  "raw": "\"body2\""
                                }
                              },
                              {
                                "type": "JSXAttribute",
                                "name": {
                                  "type": "JSXIdentifier",
                                  "name": "component"
                                },
                                "value": {
                                  "type": "Literal",
                                  "value": "span",
                                  "raw": "\"span\""
                                }
                              }
                            ]
                          },
                          "children": [
                            {
                              "type": "JSXText",
                              "value": "\n      ",
                              "raw": "\n      "
                            },
                            {
                              "type": "JSXExpressionContainer",
                              "expression": {
                                "type": "ConditionalExpression",
                                "test": {
                                  "type": "LogicalExpression",
                                  "operator": "&&",
                                  "left": {
                                    "type": "BinaryExpression",
                                    "operator": "==",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "value"
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": null,
                                      "raw": "null"
                                    }
                                  },
                                  "right": {
                                    "type": "Identifier",
                                    "name": "emptyText"
                                  }
                                },
                                "consequent": {
                                  "type": "Identifier",
                                  "name": "emptyText"
                                },
                                "alternate": {
                                  "type": "ConditionalExpression",
                                  "test": {
                                    "type": "Identifier",
                                    "name": "stripTags"
                                  },
                                  "consequent": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "removeTags"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "value"
                                      }
                                    ]
                                  },
                                  "alternate": {
                                    "type": "JSXElement",
                                    "openingElement": {
                                      "type": "JSXOpeningElement",
                                      "name": {
                                        "type": "JSXIdentifier",
                                        "name": "span"
                                      },
                                      "selfClosing": true,
                                      "attributes": [
                                        {
                                          "type": "JSXAttribute",
                                          "name": {
                                            "type": "JSXIdentifier",
                                            "name": "dangerouslySetInnerHTML"
                                          },
                                          "value": {
                                            "type": "JSXExpressionContainer",
                                            "expression": {
                                              "type": "ObjectExpression",
                                              "properties": [
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Identifier",
                                                    "name": "__html"
                                                  },
                                                  "computed": false,
                                                  "value": {
                                                    "type": "Identifier",
                                                    "name": "value"
                                                  },
                                                  "kind": "init",
                                                  "method": false,
                                                  "shorthand": false
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "children": [],
                                    "closingElement": null
                                  }
                                }
                              }
                            },
                            {
                              "type": "JSXText",
                              "value": "\n    ",
                              "raw": "\n    "
                            }
                          ],
                          "closingElement": {
                            "type": "JSXClosingElement",
                            "name": {
                              "type": "JSXIdentifier",
                              "name": "Typography"
                            }
                          }
                        }
                      }
                    ]
                  },
                  "generator": false,
                  "expression": false,
                  "async": false
                }
              ]
            }
          }
        ],
        "kind": "const"
      },
      "specifiers": [],
      "source": null
    }
  ],
  "sourceType": "module"
}